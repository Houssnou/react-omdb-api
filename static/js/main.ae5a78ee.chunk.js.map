{"version":3,"sources":["components/Container.js","components/Row.js","components/Col.js","components/Card.js","components/SearchForm.js","components/MovieDetail.js","utils/API.js","components/OmdbContainer.js","App.js","index.js"],"names":["Container","props","react_default","a","createElement","className","concat","fluid","children","Row","Col","size","split","map","join","Card","heading","SearchForm","htmlFor","onChange","handleInputChange","value","name","type","placeholder","id","onClick","handleFormSubmit","MovieDetail","alt","title","src","style","margin","director","genre","released","API","search","query","axios","get","OmdbContainer","state","result","searchMovies","then","res","_this","setState","data","catch","err","console","log","event","_event$target","target","Object","defineProperty","preventDefault","movie","this","components_Container","components_Row","components_Col","components_Card","Title","components_MovieDetail","Poster","Director","Genre","Released","components_SearchForm","Component","App","components_OmdbContainer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ae5a78ee.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Row;\n","import React from \"react\";\n\n// This Col component offers us the convenience of being able to set a column's \"size\" prop instead of its className\n// We can also omit the col- at the start of each Bootstrap column class, e.g. size=\"md-12\" instead of className=\"col-md-12\"\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return (\n    <div className={size}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card text-center\">\n      <div className=\"card-header\">\n        <h2>{props.heading}</h2>\n      </div>\n      <div className=\"card-body\">{props.children}</div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nfunction SearchForm(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Search:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.value}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search For a Movie\"\n          id=\"search\"\n        />\n        <br />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\n\nfunction MovieDetail(props) {\n  return (\n    <div className=\"text-center\">\n      <img alt={props.title} className=\"img-fluid\" src={props.src} style={{ margin: \"0 auto\" }} />\n      <h3>Director(s): {props.director}</h3>\n      <h3>Genre: {props.genre}</h3>\n      <h3>Released: {props.released}</h3>\n    </div>\n  );\n}\n\nexport default MovieDetail;\n","import axios from \"axios\";\nconst BASEURL = \"https://www.omdbapi.com/?t=\";\nconst APIKEY = \"&apikey=trilogy\";\n\nexport default {\n  search: function(query) {\n    return axios.get(BASEURL + query + APIKEY);\n  }\n};\n","import React, { Component } from \"react\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Col from \"./Col\";\nimport Card from \"./Card\";\nimport SearchForm from \"./SearchForm\";\nimport MovieDetail from \"./MovieDetail\";\nimport API from \"../utils/API\";\n\nclass OmdbContainer extends Component {\n  state = {\n    result: {},\n    search: \"\"\n  };\n  //componentDidMount()\n  componentDidMount(){\n    this.searchMovies(\"The Matrix\");\n  }\n\n  searchMovies = query => {\n    API.search(query)\n      .then(res => this.setState({ result: res.data }))\n      .catch(err => console.log(err));\n  };\n\n  //handleInput\n  handleInputChange=event=>{\n    const {name,value}=event.target;\n\n    //setState\n    this.setState({\n      [name]:value\n    })\n  };\n\n  //handlesubmit\n  handleFormSubmit=event=>{\n  event.preventDefault();\n  //setState\n  const movie=this.state.search;\n    //search the movie\n  this.searchMovies(movie);\n\n  };\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-8\">\n            <Card\n              heading={this.state.result.Title || \"Search for a Movie to Begin\"}\n            >\n              <MovieDetail\n                title={this.state.result.Title}\n                src={this.state.result.Poster}\n                director={this.state.result.Director}\n                genre={this.state.result.Genre}\n                released={this.state.result.Released}\n              />\n            </Card>\n          </Col>\n          <Col size=\"md-4\">\n            <Card heading=\"Search\">\n              <SearchForm\n                value={this.state.search}\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n              />\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default OmdbContainer;\n","import React from \"react\";\nimport OmdbContainer from \"./components/OmdbContainer\";\n\nfunction App() {\n  return <OmdbContainer />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}